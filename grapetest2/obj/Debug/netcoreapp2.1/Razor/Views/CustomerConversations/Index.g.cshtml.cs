#pragma checksum "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "54bcc653b820e6c499d138f2775c78629c1b4bb9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CustomerConversations_Index), @"mvc.1.0.view", @"/Views/CustomerConversations/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CustomerConversations/Index.cshtml", typeof(AspNetCore.Views_CustomerConversations_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\_ViewImports.cshtml"
using grapetest2;

#line default
#line hidden
#line 2 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\_ViewImports.cshtml"
using grapetest2.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"54bcc653b820e6c499d138f2775c78629c1b4bb9", @"/Views/CustomerConversations/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2274b8541d70f74c97cfbffea0cc58d1697fcc91", @"/Views/_ViewImports.cshtml")]
    public class Views_CustomerConversations_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<CustomerConversation>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/signalr.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/ChatModal.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
  
  ViewData["Title"] = "Customer conversations";

  string url = (Context.Request.IsHttps ? "https://" : "http://") + Context.Request.Host + Context.Request.Path;
  string danger_row = "alert-danger";
  string active_row = "table-active";

#line default
#line hidden
            BeginContext(285, 48, true);
            WriteLiteral("\r\n<h2>Customer conversations - Operator</h2>\r\n\r\n");
            EndContext();
#line 12 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
 if (User.Identity.IsAuthenticated)
{

#line default
#line hidden
            BeginContext(373, 2, true);
            WriteLiteral("  ");
            EndContext();
            BeginContext(375, 52, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df8a0e5896f74917a081069f8e0a03c8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(427, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 15 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
}

#line default
#line hidden
            BeginContext(432, 273, true);
            WriteLiteral(@"
<table class=""table"">
  <thead>
    <tr>
      <th scope=""col"">Last modified</th>
      <th scope=""col"">Created</th>
      <th scope=""col"">Unanswered</th>
      <th scope=""col"">Is closed?</th>
    </tr>
  </thead>
  <tbody id=""customerConversationTableBody"">

");
            EndContext();
#line 28 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
     for (int i = 0; i < Model.Count; i++)
    {

#line default
#line hidden
            BeginContext(756, 9, true);
            WriteLiteral("      <tr");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 765, "\"", 803, 2);
            WriteAttributeValue("", 770, "connection_", 770, 11, true);
#line 30 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
WriteAttributeValue("", 781, Model[i].ConnectionId, 781, 22, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("class", " class=\"", 804, "\"", 861, 1);
#line 30 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
WriteAttributeValue("", 812, @Model[i].Unanswered ? danger_row : active_row, 812, 49, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(862, 27, true);
            WriteLiteral(">\r\n        <td scope=\"row\">");
            EndContext();
            BeginContext(890, 35, false);
#line 31 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
                   Write(Model[i].LastModified.ToLocalTime());

#line default
#line hidden
            EndContext();
            BeginContext(925, 19, true);
            WriteLiteral("</td>\r\n        <td>");
            EndContext();
            BeginContext(945, 30, false);
#line 32 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
       Write(Model[i].Created.ToLocalTime());

#line default
#line hidden
            EndContext();
            BeginContext(975, 19, true);
            WriteLiteral("</td>\r\n        <td>");
            EndContext();
            BeginContext(995, 40, false);
#line 33 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
       Write(Model[i].Unanswered.ToString().ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(1035, 19, true);
            WriteLiteral("</td>\r\n        <td>");
            EndContext();
            BeginContext(1055, 36, false);
#line 34 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
       Write(Model[i].Closed.ToString().ToLower());

#line default
#line hidden
            EndContext();
            BeginContext(1091, 20, true);
            WriteLiteral("</td>\r\n      </tr>\r\n");
            EndContext();
#line 36 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
    }

#line default
#line hidden
            BeginContext(1118, 24, true);
            WriteLiteral("\r\n  </tbody>\r\n</table>\r\n");
            EndContext();
            BeginContext(1142, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ed5926feac9a4c9a9e4f56fd643f3f7d", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1183, 92, true);
            WriteLiteral("\r\n<script type=\"text/javascript\">\r\n\r\n  var timer;\r\n  var timerSeconds = 2000;\r\n  var url = \"");
            EndContext();
            BeginContext(1276, 3, false);
#line 45 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
        Write(url);

#line default
#line hidden
            EndContext();
            BeginContext(1279, 2239, true);
            WriteLiteral(@""";
  var chatModalList = [];
  var connection;

  function clickInRow(rowElement) {

    var connection_id = $(rowElement).attr('id').replace('connection_', '');

    if (chatModalList.findIndex(cm => cm.id == connection_id) == -1) {
      // new chat modal
      var offset = chatModalList.length * 320;

      $.get(url + ""/GetConversationMessages"", { connectionId: connection_id }, function (contents, status) {

        var chatModal = new ChatModal(document.body, connection_id, contents, offset, function () {
          var message = chatModal.getTypedMessage();
          if (message) {
            var connectionId = chatModal.id;
            connection.invoke(""MessageFromOperator"", connectionId, message).catch(err => console.error(err.toString()));
            var created_string = new Date().toLocaleDateString(""hu-HU"") + "" "" + new Date().toLocaleTimeString(""hu-HU"");    
            chatModal.addNewMessage({ fromcustomer: false, created: created_string, content: message });
            ch");
            WriteLiteral(@"atModal.clearInput();
          }
     
        }, function (main) {
          // destroy
          var id = $(main).attr('id').replace('chat_', '');
          var index = chatModalList.findIndex(cm => cm.id === id);    
          if (index !== -1) {
            chatModalList[index].destroy();
            chatModalList.splice(index, 1);
            // recalculate chat windows position
          }
        });
        chatModalList.push(chatModal);
      });
    }
    // remove last and create new
    else if (chatModalList.length == 4) {
      chatModalList[3].destroy();
      chatModalList.splice(3, 1);
    }

  }

  function addNewElementsToTable(modifiedConversations) {

    var conversationsTableBody = $(""#customerConversationTableBody"");

    if (conversationsTableBody.length > 0) {
      conversationsTableBody = conversationsTableBody[0];

      for (var i = 0; i < modifiedConversations.length; i++) {

        var conversationRow = $(conversationsTableBody).find(""#connect");
            WriteLiteral("ion_\" + modifiedConversations[i].connectionid);\r\n        if (conversationRow.length === 0) {\r\n          var row = $(\'<tr>\');\r\n          if (modifiedConversations[i].unanswered) row.addClass(\"");
            EndContext();
            BeginContext(3519, 10, false);
#line 102 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
                                                            Write(danger_row);

#line default
#line hidden
            EndContext();
            BeginContext(3529, 979, true);
            WriteLiteral(@""");
          row.attr('id', 'connection_' + modifiedConversations[i].connectionid);
          row.append($('<td>').text(modifiedConversations[i].lastmodified));
          row.append($('<td>').text(modifiedConversations[i].created));
          row.append($('<td>').text(modifiedConversations[i].unanswered));
          row.append($('<td>').text(modifiedConversations[i].closed));
          row.click(function () { clickInRow(this); });
          $(conversationsTableBody).append(row);
        }
        else {
          var td_list = $(conversationRow[0]).find(""td"");
          if (td_list.length >= 4) {
            $(td_list[0]).text(modifiedConversations[i].lastmodified);
            $(td_list[1]).text(modifiedConversations[i].created);
            $(td_list[2]).text(modifiedConversations[i].unanswered);
            $(td_list[3]).text(modifiedConversations[i].closed);

            if (modifiedConversations[i].unanswered) $(conversationRow[0]).addClass(""");
            EndContext();
            BeginContext(4509, 10, false);
#line 119 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
                                                                                Write(danger_row);

#line default
#line hidden
            EndContext();
            BeginContext(4519, 57, true);
            WriteLiteral("\");\r\n            else $(conversationRow[0]).removeClass(\"");
            EndContext();
            BeginContext(4577, 10, false);
#line 120 "C:\Development\- projektek\ChatTestExercise\grapetest2\Views\CustomerConversations\Index.cshtml"
                                               Write(danger_row);

#line default
#line hidden
            EndContext();
            BeginContext(4587, 1201, true);
            WriteLiteral(@""");
          }
        }
      }
    }
  }

  function refreshCustomerConversationTable() {
    $.get(url + ""/GetModified"", { }, function (modifiedConversations, status) {
      if (modifiedConversations.length > 0) addNewElementsToTable(modifiedConversations);
      timer = setTimeout(refreshCustomerConversationTable, timerSeconds);
    });
  }

  document.addEventListener(""DOMContentLoaded"", function (event) {

    var rows = $(""#customerConversationTableBody"").find('tr');
    rows.each(function () {
      $(this).click(function () {
        clickInRow(this);
      });
    });

    connection = new signalR.HubConnectionBuilder()
      .withUrl(""/chatHub"")
      .build();

    connection.start(function () {
    }).catch(err => console.error(err.toString()));

    connection.on(""ReceiveMessage"", (connection_id, messageItem) => {
      var index = chatModalList.findIndex(cm => cm.id === connection_id);    
      if (index > -1) 
        chatModalList[index].addNewMessage(messa");
            WriteLiteral("geItem);  \r\n    });\r\n\r\n    timer = setTimeout(function () {\r\n      timer = setTimeout(refreshCustomerConversationTable, timerSeconds);\r\n    }, timerSeconds);\r\n  });\r\n\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<CustomerConversation>> Html { get; private set; }
    }
}
#pragma warning restore 1591
